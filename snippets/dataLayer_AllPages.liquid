<script>
/**********************
* DATALAYER ARCHITECTURE: SHOPIFY 
* DEFINITION: A data layer helps you collect more accurate analytics data, that in turn allows you to better understand what potential buyers are doing on your website and where you can make improvements. It also reduces the time to implement marketing tags on a website, and reduces the need for IT involvement, leaving them to get on with implementing new features and fixing bugs.

* RESOURCES:
* http://www.datalayerdoctor.com/a-gentle-introduction-to-the-data-layer-for-digital-marketers/
* http://www.simoahava.com/analytics/data-layer/

* EXTERNAL DEPENDENCIES:
* jQuery
* jQuery Cookie Plugin v1.4.1 - https://github.com/carhartl/jquery-cookie
* cartjs - https://github.com/discolabs/cartjs

* DataLayer Architecture: Shopify v1.2
* COPYRIGHT 2021
* LICENSES: MIT ( https://opensource.org/licenses/MIT )
*/

/**********************
* PRELOADS 
* load jquery if it doesn't exist
***********************/ 

if(!window.jQuery){
    var jqueryScript = document.createElement('script');
    jqueryScript.setAttribute('src','https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js'); 
    document.head.appendChild(jqueryScript); 
}

__DL__jQueryinterval = setInterval(function(){
    // wait for jQuery to load & run script after jQuery has loaded
    if(window.jQuery){
        // search parameters
        getURLParams = function(name, url){
            if (!url) url = window.location.href;
            name = name.replace(/[\[\]]/g, "\\$&");
            var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
            if (!results) return null;
            if (!results[2]) return '';
            return decodeURIComponent(results[2].replace(/\+/g, " "));
        };
        
        /**********************
        * DYNAMIC DEPENDENCIES
        ***********************/
        
        __DL__ = {
            dynamicCart: true,  // if cart is dynamic (meaning no refresh on cart add) set to true
            debug: false, // if true, console messages will be displayed
            cart: null,
            wishlist: null,
            removeCart: true,
        };
        
        customBindings = {
            cartTriggers: [],
            viewCart: [],
            removeCartTrigger: [],
            cartVisableSelector: [],
            promoSubscriptionsSelectors: [],
            promoSuccess: [],
            ctaSelectors: [],
            newsletterSelectors: [],
            newsletterSuccess: [],
            searchPage: [],
            wishlistSelector: [],
            removeWishlist: [],
            wishlistPage: [],
            searchTermQuery: [getURLParams('q')], // replace var with correct query
        };
        
        /* DO NOT EDIT */
        defaultBindings = {
            cartTriggers: ['form[action="/cart/add"] [type="submit"],.add-to-cart,.cart-btn'],
            viewCart: ['[href*="/cart"],.my-cart,.trigger-cart,#mobileCart'],
            removeCartTrigger: ['[href*="/cart/change"]'],
            cartVisableSelector: ['.inlinecart.is-active,.inline-cart.is-active'],
            promoSubscriptionsSelectors: [],
            promoSuccess: [],
            ctaSelectors: [],
            newsletterSelectors: ['input.contact_email'],
            newsletterSuccess: ['.success_message'],
            searchPage: ['search'],
            wishlistSelector: [],
            removeWishlist: [],
            wishlistPage: []
        };
        
        // stitch bindings
        objectArray = customBindings;
        outputObject = __DL__;
        
        applyBindings = function(objectArray, outputObject){
            for (var x in objectArray) {  
                var key = x;
                var objs = objectArray[x]; 
                values = [];    
                if(objs.length > 0){    
                    values.push(objs);
                    if(key in outputObject){              
                        values.push(outputObject[key]); 
                        outputObject[key] = values.join(", "); 
                    }else{        
                        outputObject[key] = values.join(", ");
                    }   
                }  
            }
        };
        
        applyBindings(customBindings, __DL__);
        applyBindings(defaultBindings, __DL__);
        
        /**********************
        * PREREQUISITE LIBRARIES 
        ***********************/
        
        clearInterval(__DL__jQueryinterval);
        
        // jquery-cookies.js
        if(typeof $.cookie!==undefined)
        	{
              (function(a)
              	{
                	if(typeof define==='function'&&define.amd)
              			{define(['jquery'],a)}
              		else if(typeof exports==='object')
              			{module.exports=a(require('jquery'))}
              		else{a(jQuery)}
            	}
             		(function($)
                     {var g=/\+/g;function encode(s)
               			{return h.raw?s:encodeURIComponent(s)
               			}
              		 function decode(s)
               			{return h.raw?s:decodeURIComponent(s)
                		}
              		 function stringifyCookieValue(a)
               			{return encode(h.json?JSON.stringify(a):String(a))
                		}
              		 function parseCookieValue(s)
               			{if(s.indexOf('"')===0)
                        	{s=s.slice(1,-1).replace(/\\"/g,'"').replace(/\\\\/g,'\\')
                            }
                 		try{s=decodeURIComponent(s.replace(g,' '));
                     		return h.json?JSON.parse(s):s
                           }catch(e){}
                		}
              		 function read(s,a)
                        {
                          	var b=h.raw?s:parseCookieValue(s);
                 			return $.isFunction(a)?a(b):b
                        }
              		 var h=$.cookie=function(a,b,c)
                    				{if(arguments.length>1&&!$.isFunction(b)
                                       )
              							{c=$.extend({},h.defaults,c
                                                   );
										if(typeof c.expires==='number')
                							{var d=c.expires,t=c.expires=new Date();
                     						t.setMilliseconds(t.getMilliseconds()+d*864e+5)
                                            }
                						return(document.cookie=[encode(a),'=',stringifyCookieValue(b),c.expires?'; expires='+c.expires.toUTCString():'',c.path?'; path='+c.path:'',c.domain?'; domain='+c.domain:'',c.secure?'; secure':''].join(''))
                						}
               							var e=a?undefined:{},cookies=document.cookie?document.cookie.split('; '):[],i=0,l=cookies.length;for(;i<l;i++)
               							{var f=cookies[i].split('='),name=decode(f.shift()),cookie=f.join('=');
                						if(a===name)
                                        	{e=read(cookie,b);break
                                            }
                                        if(!a&&(cookie=read(cookie))!==undefined)
                                        	{e[name]=cookie}
               							}
               				return e};
                     h.defaults={};$.removeCookie=function(a,b)
                     								{$.cookie(a,'',$.extend({},b,{expires:-1}));
                                  					return!$.cookie(a)
                                                    }
                     }
                    )
              )
            }
        
        /**********************
        * Begin dataLayer Build 
        ***********************/
        
        /**
        * DEBUG
        * Set to true or false to display messages to the console
        */
        if(__DL__.debug){
            console.log('=====================\n| DATALAYER SHOPIFY |\n---------------------');
            console.log('Page Template: {{ template }}');
        }
        
        window.dataLayer = window.dataLayer || [];  // init data layer if doesn't already exist
        dataLayer.push({'event': 'Begin DataLayer'}); // begin datalayer
        
        var template = "{{template}}"; 
               
        /**********************
        * DATALAYER SECTIONS 
        ***********************/
        
        /** 
        * DATALAYER: Blog Articles
        * Fire on Blog Article Pages */
        
        {% if template contains 'article' %}
        var blog = {
            'author'      : {{article.author | json}},
            'title'       : {{article.title | json}},
            'dateCreated' : {{article.created_at | json}},
            'pageType'    : 'Blog',
            'event'       : 'Blog'
        };
        dataLayer.push(blog);
        if(__DL__.debug){
            console.log("Blog"+" :"+JSON.stringify(blog, null, " "));
        }
        {% endif %}
        
        /** DATALAYER: Product List Page (Collections, Category)
        * Fire on all product listing pages. */
        
        {% if template contains 'collection' %}
        
        var product = {
            'products': [
                {% for product in collection.products %}{
                    'prod_id'         : {{product.id | json}},
                    'id'              : {{product.selected_or_first_available_variant.sku | json}},
                    'variant_id'       : {{product.selected_or_first_available_variant.id | json}},
                    'productType'     : {{product.type | json}},
                    'name'            : {{product.title | json}},
                    'price'           : {{product.price | money_without_currency | remove: "," | json}},
                    'imageURL'        : "https:{{product.featured_image.src|img_url:'grande'}}", 
                    'productURL'      : '{{shop.secure_url}}{{product.url}}',
                    'brand'           : {{shop.name | json}},
                    'comparePrice'    : {{product.compare_at_price_max | money_without_currency | remove: "," | json}},
                    'category'        : {{product.collections|map:"title" | join: ' / '| json}},
                    'currentCategory' : {{collection.title | json}},
                    'quantity'		  : 1,
                    'variant'  : [
                        {% for option in product.options_with_values %}
                        {% for value in option.values %}
                        {% if option.selected_value == value %}
                        {{value | json}},
                        {% endif %}
                        {% endfor %}
                        {% endfor %}
                    ].join( ' / ')
                },
                {% endfor %}]
            };
  		
          		
            var GA4itemlist = {
                'productList'  : {{collection.title | json}},
                'pageType'     : 'Collection',
                'event'        : 'SME_view_item_list',
              	'currencyCode' : {{ shop.currency | json}},
                'ecommerce'	   : {
              		'items'    : [
              			{% for product in collection.products %}{
                    		'prod_id'         : {{product.id | json}},
                    		'item_id'         : {{product.selected_or_first_available_variant.sku | json}},
                    		'variant_id'       : {{product.selected_or_first_available_variant.id | json}},
                    		'productType'     : {{product.type | json}},
                    		'item_name'       : {{product.title | json}},
                    		'price'           : {{product.price | money_without_currency | remove: "," | json}},
                    		'imageURL'        : "https:{{product.featured_image.src|img_url:'grande'}}", 
                    		'productURL'      : '{{shop.secure_url}}{{product.url}}',
                    		'brand'      : {{shop.name | json}},
                    		'comparePrice'    : {{product.compare_at_price_max | money_without_currency | remove: "," | json}},
                    		'item_category'   : {{product.collections|map:"title" | join: ' / '| json}},
                    		'item_list_name'  : {{collection.title | json}},
              				'currency'        : {{ shop.currency | json}},
              				'quantity'		  : 1,
                    		'item_variant'    : [
                        {% for option in product.options_with_values %}
                        {% for value in option.values %}
                        {% if option.selected_value == value %}
                        {{value | json}},
                        {% endif %}
                        {% endfor %}
                        {% endfor %}
                    ].join( ' / ')
                	},
                	{% endfor %}
                ]
				}
            };
  			
      		dataLayer.push(product);
  			dataLayer.push({ products: null });
      		dataLayer.push(GA4itemlist);  			
			
            dataLayer.push({ ecommerce: null });
            dataLayer.push(UAImpressions);
  			if(__DL__.debug){
                /** console.log("Collections"+" :"+JSON.stringify(product, null, " ")); */
                console.log("Collections"+" :"+JSON.stringify(UAImpressions, null, " "));
            }
            {% endif %}
            
            /** DATALAYER: Product Page
            * Fire on all Product View pages. */
            
            if (template.match(/.*product.*/gi) && !template.match(/.*collection.*/gi)){
                sku = '';
              	var productoptions = {'variant'  : {
                           								{% for option in product.options_with_values %}
                           								{% for value in option.values %}
                           								{% if option.selected_value == value %}
                           								{{option.name | json}} : {{value | json}},
                           								{% endif %}
                           								{% endfor %}
                           								{% endfor %}
                                  	}};
                var productoptions2 = Object.values(productoptions.variant);
                var finaloption = productoptions2.join(' / ');
                var product = {
                    'products': [{
                        'prod_id'         : {{product.id | json}},
                        'id'              : {{product.selected_or_first_available_variant.sku | json}},
                        'variant_id'       : {{product.selected_or_first_available_variant.id | json}},
                        'productType'     : {{product.type | json}},
                        'name'            : {{product.title | json}},
                        'price'           : {{product.selected_or_first_available_variant.price | money_without_currency | remove: "," | json}},
                        'description'     : {{product.description | strip_newlines | strip_html | json}},
                        'imageURL'        : "https:{{product.featured_image.src|img_url:'grande'}}", 
                        'productURL'      : '{{shop.secure_url}}{{product.url}}',
                        'brand'           : {{shop.name | json}},              
                        'comparePrice'    : {{product.compare_at_price_max | money_without_currency | remove: "," | json}},
                        'category'        : {{product.collections | map:"title" | join: ' / ' | json}},
                        'currentCategory' : {{collection.title | json}},
                        'variant'  		  : finaloption,
                        'quantity'		  : 1
                    }]
                };
               var GA4product = {
                    product
                };
              
                function productView(){
                    var sku = {{product.selected_or_first_available_variant.sku | json}};
                    dataLayer.push({
                        'pageType' : 'Product',
                        'event'    : 'SME_view_item',
                        'currencyCode' : {{ shop.currency | json}},
                      	'ecommerce'	   : {
                      	'items'    : [{
                    				'prod_id'         : {{product.id | json}},
                    				'item_id'         : {{product.selected_or_first_available_variant.sku | json}},
                    				'variant_id'       : {{product.selected_or_first_available_variant.id | json}},
                    				'productType'     : {{product.type | json}},
                    				'item_name'       : {{product.title | json}},
                    				'price'           : {{product.price | money_without_currency | remove: "," | json}},
                    				'imageURL'        : "https:{{product.featured_image.src|img_url:'grande'}}", 
                    				'productURL'      : '{{shop.secure_url}}{{product.url}}',
                      				'brand'      : {{shop.name | json}},
                    				'comparePrice'    : {{product.compare_at_price_max | money_without_currency | remove: "," | json}},
                    				'item_category'   : {{product.collections|map:"title" | join: ' / '| json}},
                    				'currentCategory' : {{collection.title | json}},
              						'currency'        : {{ shop.currency | json}},
              						'quantity'		  : 1,
                    				'item_variant'    : [
                       					 {% for option in product.options_with_values %}
                        				 {% for value in option.values %}
                        				 {% if option.selected_value == value %}
                        				 {{value | json}},
                        				 {% endif %}
                        				 {% endfor %}
                        				 {% endfor %}
                    				].join( ' / ')
                				},
                			]
						}
                    });
                    
                        if(__DL__.debug){
                            console.log("Product"+" :"+JSON.stringify(product, null, " "));
                        }
                    }
                    productView();
                    
                    $(__DL__.cartTriggers).click(function(){
                        var skumatch = {{product.selected_or_first_available_variant.sku | json}};
                        if(sku != skumatch){
                        }
                    });
                }
                
                /** DATALAYER: Cart View
                * Fire anytime a user views their cart (non-dynamic) */
                
                {% if template contains 'cart' %}
  				var GA4cart = {
                    'pageType'     : 'Cart',
                    'event'        : 'SME_view_cart',
                    'currencyCode' : {{ shop.currency | json}},
                    'subtotal'     : {{ cart.items_subtotal_price | money_without_currency | remove: "," | json}},
                  	'ecommerce'    :{
                  		'currency' 		: {{ shop.currency | json}},
                  		'value'     	: {{ cart.items_subtotal_price | money_without_currency | remove: "," | json}},
                  		'items'			: [
                  			{% for line_item in cart.items %}
                  			{
                        	'prod_id'      : {{line_item.product_id | json}},
                        	'id'     	   : {{line_item.sku | json}},
                            'currency' 	   : {{ shop.currency | json}},
                        	'variant_id'   : {{line_item.variant_id | json}},
                        	'name'    	   : {{line_item.title | split: " - " | first | json}},
                    		'variant'      : {{line_item.title | split: " - " | last | json}},
                        	'price'   	   : {{line_item.price | money_without_currency | remove: "," | json}},
                        	'quantity' 	   : {{line_item.quantity | json}}
                			},
                    		{% endfor %}
                    	]
  					}
                                   };
                
                dataLayer.push(GA4cart);
                if(__DL__.debug){
                    console.log("Cart"+" :"+JSON.stringify(GA4cart, null, " "));
                }
                
                __DL__.cart = UAcart.products;
                $(__DL__.removeCartTrigger).on('click', function (event) {
                    
                    setTimeout(function(){
                        // remove from cart
                        jQuery.getJSON("/cart", function (response) {
                            // get Json response 
                            __DL__.removeCart = response;
                            var removeFromCart = {
                                'products': __DL__.removeCart.items.map(function (line_item) {
                                    return {
                                     'prod_id'      : line_item.product_id,
                                     'id'           : line_item.sku,
                                     'variant_id'   : line_item.variant_id,
                                     'name'    	    : line_item.title.split('-')[0],
                    				 'variant'      : line_item.title.split('-')[1],
                                     'price'        : line_item.price,
                                     'quantity'     : line_item.quantity
                                    }
                                }),        
                            };
                            __DL__.removeCart = removeFromCart;
                            var cartIDs = [];
                            var removeIDs = [];
                            var removeCart = [];
                            var cartlength = __DL__.cart.products.length-1;
                          	var aremovelenght = __DL__.removeCart.products.length-1;
                            
                            // remove from cart logic
                            for(var i= cartlength;i>=0;i--)
                            	{var x=parseFloat(__DL__.cart.products[i].variant_id);
                                 cartIDs.push(x)}
                            for(var i= aremovelenght;i>=0;i--)
                            	{var x=parseFloat(__DL__.removeCart.products[i].variant_id);
                                 removeIDs.push(x)}
                            function arr_diff(b,c)
                          		{var a=[],diff=[];
                                 for(var i=0;i<b.length;i++)
                                 	{a[b[i]]=true;
                                    }
                                 
                                 for(var i=0;i<c.length;i++)
                                 	{a[c[i]]=false;
                                    }
                                 if (a.length == 1)
                                 	{diff.push(k);
                                    }
                                 else
                                 	{for(var k in a)
                                      		if (a[k] == true)
                                    			{diff.push(k);
                                        		}
                                 		
                                    }
                                  return diff;
                                 
                                }
                                 
                            var x = arr_diff(cartIDs,removeIDs)[0];
                            for(var i=cartlength;i>=0;i--)
                            	{if(__DL__.cart.products[i].variant_id == x)
                                {
                                     var remove = {
                                       'products' : [{
                                     		'prod_id'      : __DL__.cart.products[i].prod_id,
                                     		'id'           : __DL__.cart.products[i].id,
                                     		'variant_id'   : __DL__.cart.products[i].variant_id,
                                     		'name'    	   : (__DL__.cart.products[i].name).trim(),
                    				 		'variant'      : (__DL__.cart.products[i].variant).trim(),
                                     		'price'        : (__DL__.cart.products[i].price/100).toFixed(2),
                                     		'quantity'     : __DL__.cart.products[i].quantity
                                   		}]
                                     };
                                 var ecommerce = {
                                   		'currency' : {{ shop.currency | json}},
                                   		'items' : [{
                                     		'prod_id'      : __DL__.cart.products[i].prod_id,
                                     		'item_id'      : __DL__.cart.products[i].id,
                                     		'variant_id'   : __DL__.cart.products[i].variant_id,
                                     		'item_name'    : (__DL__.cart.products[i].name).trim(),
                    				 		'item_variant' : (__DL__.cart.products[i].variant).trim(),
                                     		'price'        : (__DL__.cart.products[i].price/100).toFixed(2),
                                     		'quantity'     : __DL__.cart.products[i].quantity
                                   		}]
                                 };
                                }
                                }	
                            dataLayer.push({ ecommerce: null });                           		
                            dataLayer.push({
                                'pageType' : 'Remove from Cart',
                                'event'    : 'SME_remove_from_cart',
                                'currencyCode' : {{ shop.currency | json}},
                              	ecommerce
                            });
                           
                          	location.reload();
                            if (__DL__.debug) {
                              console.log("Cart"+" :"+JSON.stringify(remove, null, " "));
                            }
                        });
                    }, 2000);
                    
                });
      
                
                {% endif %}
                
                /** 
                * DATALAYER Variable
                * Checkout & Transaction Data
                * Uncomment if using Shopify Plus
                
                __DL__products = [];
                
                {% for line_item in checkout.line_items %}
                
                __DL__products.push({
                    'prod_id'     : {{line_item.product_id | json}},
                    'id'          : {{line_item.sku | json}},
                    'variant_id'   : {{line_item.variant_id | json}},
                    'name'        : {{line_item.title | json}},
                    'productType' : {{line_item.product.type | json}},
                    'price'       : {{line_item.price | money_without_currency | remove: "," | json}},
                    'quantity'    : {{line_item.quantity | json}},
                    'description' : {{line_item.product.description | strip_newlines | strip_html  | json }},
                    'imageURL'    : "https:{{line_item.product.featured_image.src|img_url:'grande'}}", 
                    'productURL'  : '{{shop.secure_url}}{{line_item.product.url}}'
                });
                
                {% endfor %}
                transactionData = {
                    'transactionNumber'      : {{checkout.order_id | json}},
                    'transactionId'          : {{checkout.order_number | json}},
                    'transactionAffiliation' : {{shop.name | json}},
                    'transactionTotal'       : {{checkout.total_price | money_without_currency| remove: "," | json}},
                    'transactionTax'         : {{checkout.tax_price | money_without_currency| remove: "," | json}},
                    'transactionShipping'    : {{checkout.shipping_price | money_without_currency| remove: "," | json}},
                    'transactionSubtotal'    : {{checkout.subtotal_price | money_without_currency| remove: "," | json}},
                    {% for discount in checkout.discounts %}
                    'promoCode' : {{discount.code | json}},
                    'discount'  : {{discount.amount | money_without_currency | json}},
                    {% endfor %}
                    
                    'products': __DL__products
                };
                
                if(__DL__.debug == true){
                    
                    /** DATALAYER: Transaction
                    if(window.location.pathname.match(/^.*order.*$/)){
                        dataLayer.push(transactionData,{
                            'pageType' :'Transaction',
                            'event'    :'SME Transaction'
                        });       
                        console.log("Transaction Data"+" :"+JSON.stringify(transactionData, null, " "));
                    }
                }
                
                /** DATALAYER: Checkout
                if(Shopify.Checkout){
                    if(Shopify.Checkout.step){ 
                        if(Shopify.Checkout.step.length > 0){
                            if (Shopify.Checkout.step === 'contact_information'){
                                dataLayer.push(transactionData,{
                                    'event'    :'SME Customer Information',
                                    'pageType' :'Customer Information'});
                                    console.log("Customer Information - Transaction Data"+" :"+JSON.stringify(transactionData, null, " "));
                                }else if (Shopify.Checkout.step === 'shipping_method'){
                                    dataLayer.push(transactionData,{
                                        'event'    :'SME Shipping Information',
                                        'pageType' :'Shipping Information'});
                                        console.log("Shipping - Transaction Data"+" :"+JSON.stringify(transactionData, null, " "));
                                    }else if( Shopify.Checkout.step === "payment_method" ){
                                        dataLayer.push(transactionData,{
                                            'event'    :'SME Add Payment Info',
                                            'pageType' :'Add Payment Info'});
                                            console.log("Payment - Transaction Data"+" :"+JSON.stringify(transactionData, null, " "));
                                        }
                                    }
                                    
                                    if(__DL__.debug == true){
                                        /** DATALAYER: Transaction
                                        if(Shopify.Checkout.page == "thank_you"){
                                            dataLayer.push(transactionData,{
                                                'pageType' :'Transaction',
                                                'event'    :'Transaction'
                                            });       
                                            console.log("Transaction Data"+" :"+JSON.stringify(transactionData, null, " "));  
                                        }
                                    }else{
                                        /** DATALAYER: Transaction
                                        if(Shopify.Checkout.page == "thank_you"){
                                            dataLayer.push(transactionData,{
                                                'pageType' :'Transaction',
                                                'event'    :'Transaction'
                                            });
                                        }
                                    }
                                }
                            }
                            
                            /** DATALAYER: All Pages
                            * Fire all pages trigger after all additional dataLayers have loaded. */
                            
                            dataLayer.push({
                                'event': 'DataLayer Loaded'
                            });
                            
                            console.log('DATALAYER: DataLayer Loaded.');
                            
                            /**********************
                            * DATALAYER EVENT BINDINGS
                            ***********************/
                            
                            /** DATALAYER: 
                            * Add to Cart / Dynamic Cart View
                            * Fire all pages trigger after all additional dataLayers have loaded. */
                            
                            $(document).ready(function() {
                                
                                /** DATALAYER: Search Results */
                                
                                var searchPage = new RegExp(__DL__.searchPage, "g");
                                if(document.location.pathname.match(searchPage)){
                                    var search = {
                                        'searchTerm' : __DL__.searchTermQuery,
                                        'pageType'   : "Search",
                                        'event'      : "SME Search"
                                    };
                                    
                                    dataLayer.push(search);
                                    if(__DL__.debug){
                                        console.log("Search"+" :"+JSON.stringify(search, null, " "));
                                    }
                                }
                                
                                /** DATALAYER: Cart */
                                
                                // stage cart data
                                function mapJSONcartData(){
                                    jQuery.getJSON('/cart.js', function (response) {
                                        // get Json response 
                                        __DL__.cart = response;
                                        var cart = {
                                            'products': __DL__.cart.items.map(function (line_item) {
                                                return {
                                                    'prod_id'      : line_item.product_id,
                                                    'id'           : line_item.sku,
                                                    'variant_id'   : line_item.variant_id,
                                                    'name'         : line_item.title,
                                                    'variant'      : line_item.title,
                                                    'price'        : line_item.price,
                                                    'quantity'     : line_item.quantity
                                                }
                                            }),
                                            'pageType' : 'Cart',
                                            'event'    : 'SME_view_cart'     
                                        };
                                        if(cart.products.length > 0){
                                            dataLayer.push(cart);
                                            if (__DL__.debug) {
                                                console.log("Cart"+" :"+JSON.stringify(cart, null, " "));
                                            }
                                        }
                                    });
                                }
                                
                                viewcartfire = 0;
                                
                                // view cart
                                $(__DL__.viewCart).on('click', function (event) {                                    
                                    if(viewcartfire !== 1){ 
                                        viewcartfire = 1;
                                        // if dynamic cart is TRUE
                                        if (__DL__.dynamicCart) {
                                            cartCheck = setInterval(function () {
                                                // begin check interval
                                                if ($(__DL__.cartVisableSelector).length > 0) {
                                                    // check visible selectors
                                                    clearInterval(cartCheck);
                                                    mapJSONcartData();
                                                    $(__DL__.removeCartTrigger).on('click', function (event) {
                                                        // remove from cart
                                                        var link = $(this).attr("href");
                                                        jQuery.getJSON(link, function (response) {
                                                            // get Json response 
                                                            __DL__.removeCart = response;
                                                            var removeFromCart = {
                                                                'products': __DL__.removeCart.items.map(function (line_item) {
                                                                    return {
                                                                        'prod_id'      : line_item.product_id,
                                                                        'id'           : line_item.sku,
                                                                        'variant_id'   : line_item.variant_id,
                                                                        'name'         : line_item.title.split('-')[0],
                    				 									'variant'      : line_item.title.split('-')[1],
                                                                        'price'        : line_item.price,
                                                                        'quantity'     : line_item.quantity
                                                                    }
                                                                }),
                                                                'pageType' : 'Remove from Cart',
                                                                'event'    : 'SME_remove_from_cart'         
                                                            };
                                                            dataLayer.push(removeFromCart);
                                                            if (__DL__.debug) {
                                                                console.log("Cart"+" :"+JSON.stringify(removeFromCart, null, " "));
                                                            }
                                                        });
                                                    });
                                                }
                                            }, 500);
                                        }       
                                    }
                                });
                                
                                // add to cart
                                jQuery.getJSON('/cart.js', function (response) {
                                    // get Json response 
                                    __DL__.cart = response;
                                    var cart = {
                                        'products': __DL__.cart.items.map(function (line_item) {
                                            return {
                                                'prod_id'      : line_item.product_id,
                                                'id'           : line_item.sku,
                                                'variant_id'   : line_item.variant_id,
                                                'name'         : line_item.title.split('-')[0],
                    				 			'variant'      : line_item.title.split('-')[1],
                                                'price'        : line_item.price,
                                                'quantity'     : line_item.quantity
                                            }
                                        })
                                    }
                                    __DL__.cart = cart;
                                    collection_cartIDs = [];
                                    collection_matchIDs = [];
                                    collection_addtocart = [];
                                    for (var i = __DL__.cart.products.length - 1; i >= 0; i--) {
                                        var x = parseFloat(__DL__.cart.products[i].variant);
                                        collection_cartIDs.push(x);
                                    }
                                });
                                
                                function __DL__addtocart(){

                                {% if template contains 'collection' %}         
                                    
                                    setTimeout(function(){
                                        jQuery.getJSON('/cart.js', function (response) {
                                            // get Json response 
                                            __DL__.cart = response;
                                            var cart = {
                                                'products': __DL__.cart.items.map(function (line_item) {
                                                    return {
                                                        'prod_id'      : line_item.product_id,
                                                        'id'           : line_item.sku,
                                                        'variant_id'   : line_item.variant_id,
                                                        'name'         : line_item.title.split('-')[0],
                    				 			        'variant'      : line_item.title.split('-')[1],
                                                        'price'        : line_item.price,
                                                        'quantity'     : line_item.quantity
                                                    }
                                                })
                                            }
                                            __DL__.cart = cart;
                                            for (var i = __DL__.cart.products.length - 1; i >= 0; i--) {
                                                var x = parseFloat(__DL__.cart.products[i].variant);
                                                collection_matchIDs.push(x);
                                            }
                                            function arr_diff(b, c) {
                                                var a = [],
                                                diff = [];
                                                for (var i = 0; i < b.length; i++) {
                                                    a[b[i]] = true
                                                }
                                                for (var i = 0; i < c.length; i++) {
                                                    if (a[c[i]]) {
                                                        delete a[c[i]]
                                                    } else {
                                                        a[c[i]] = true
                                                    }
                                                }
                                                for (var k in a) {
                                                    diff.push(k)
                                                }
                                                return diff
                                            };
                                            var x = arr_diff(collection_cartIDs, collection_matchIDs).pop();
                                            for (var i = __DL__.cart.products.length - 1; i >= 0; i--) {
                                                if (__DL__.cart.products[i].variant.toString() === x) {
                                                    product = {'products':[__DL__.cart.products[i]]};
                                                    dataLayer.push({'products':product});
                                                    dataLayer.push(product);
                                                    dataLayer.push({
                                                        'pageType' : 'Add to Cart',
                                                        'event'    : 'SME_add_to_cart'
                                                    });
                                                    if (__DL__.debug) {
                                                        console.log("Add to Cart"+" :"+JSON.stringify(product, null, " "));
                                                    }
                                                }
                                            }
                                        });
                                    },1000);
                                    
                                    {% else %}
                                  	var productoptions = {'variant'  : {
                           								{% for option in product.options_with_values %}
                           								{% for value in option.values %}
                           								{% if option.selected_value == value %}
                           								{{option.name | json}} : {{value | json}},
                           								{% endif %}
                           								{% endfor %}
                           								{% endfor %}
                                  	}};
                					var productoptions2 = Object.values(productoptions.variant);
                					var finaloption = productoptions2.join(' / ');
								  
                                  dataLayer.push({ ecommerce: null });
                                  dataLayer.push({
                                        'pageType' : 'Add to Cart',
                                        'event'    : 'SME_add_to_cart',
                                      	'currencyCode' : {{ shop.currency | json}},
                                        'ecommerce': {
                                        	'items' : [{
                           			            'prod_id'         : {{product.id | json}},			
                                                'item_id'         : {{product.selected_or_first_available_variant.sku | json}},
                        						'variantId'       : {{product.selected_or_first_available_variant.id | json}},
                        						'productType'     : {{product.type | json}},
                        						'item_name'       : {{product.title | json}},
                        						'price'           : {{product.selected_or_first_available_variant.price | money_without_currency | remove: "," | json}},
                        						'description'     : {{product.description | strip_newlines | strip_html | json}},
                        						'imageURL'        : "https:{{product.featured_image.src|img_url:'grande'}}", 
                        						'productURL'      : '{{shop.secure_url}}{{product.url}}',
                        						'item_brand'      : {{shop.name | json}},              
                        						'comparePrice'    : {{product.compare_at_price_max | money_without_currency | remove: "," | json}},
                        						'item_category'   : {{product.collections | map:"title" | join: ' / '| json}},
                        						'currentCategory' : {{collection.title | json}},
                        						'item_variant'    : finaloption,
                                    			'currenc'         : {{ shop.currency | json}},
                                    			'quantity'		  : 1
                    						}]
                        				}
                                  });
                                  
                                    if (__DL__.debug) {
                                        console.log("Add to Cart"+" :"+JSON.stringify(product, null, " "));
                                    }
                                    
                                    {% endif %}
                                    
                                    // if dynamic cart is TRUE
                                    if (__DL__.dynamicCart) {
                                        console.log("dynamic");
                                        var cartCheck = setInterval(function () {
                                            // begin check interval
                                            if ($(__DL__.cartVisableSelector).length > 0) {
                                                // check visible selectors
                                                clearInterval(cartCheck);
                                                mapJSONcartData();
                                                $(__DL__.removeCartTrigger).on('click', function (event) {
                                                    // remove from cart
                                                    var link = $(this).attr("href");
                                                    jQuery.getJSON(link, function (response) {
                                                        // get Json response 
                                                        __DL__.removeCart = response;
                                                        var removeFromCart = {
                                                            'products': __DL__.removeCart.items.map(function (line_item) {
                                                                return {
                                                                    'prod_id'      : line_item.product_id,
                                                                    'id'           : line_item.sku,
                                                                    'variant_id'   : line_item.variant_id,
                                                                    'name'         : line_item.title.split('-')[0],
                    				 								'variant'      : line_item.title.split('-')[1],
                                                                    'price'        : line_item.price,
                                                                    'quantity'     : line_item.quantity
                                                                }
                                                            }),
                                                            'pageType' : 'Remove from Cart',
                                                            'event'    : 'SME_remove_from_cart'         
                                                        };
                                                        dataLayer.push(removeFromCart);
                                                        if (__DL__.debug) {
                                                            console.log("Cart"+" :"+JSON.stringify(removeFromCart, null, " "));
                                                        }
                                                    });
                                                });
                                            }
                                        }, 500);
                                    }       
                                }
                                
                                $(document).on('click', __DL__.cartTriggers, function() {
                                    __DL__addtocart();
                                });
                                
                                /** 
                                 * DATALAYER: Newsletter Subscription */
                                __DL__newsletter_fire = 0;
                                $(document).on('click', __DL__.newsletterSelectors, function () {
                                    if(__DL__newsletter_fire !== 1){
                                        __DL__newsletter_fire = 1;
                                        var newsletterCheck = setInterval(function () {
                                            // begin check interval
                                            if ($(__DL__.newsletterSuccess).length > 0) {
                                                // check visible selectors
                                                clearInterval(newsletterCheck);
                                                dataLayer.push({'event': 'Newsletter Subscription'});
                                            }
                                        },500);
                                    }
                                });
                                
                                /** DATALAYER: Wishlist */
                                setTimeout( function(){
                                    
                                    $(__DL__.wishlistSelector).on('click', function () {
                                        dataLayer.push(product,
                                            {'event': 'Add to Wishlist'});
                                            if(__DL__.debug){
                                                console.log("Wishlist"+" :"+JSON.stringify(product, null, " "));
                                            }
                                        });
                                        
                                        if(document.location.pathname == __DL__.wishlistPage){
                                            var __DL__productLinks = $('[href*="product"]');
                                            var __DL__prods        = [];
                                            var __DL__links        = [];
                                            var __DL__count        = 1;
                                            
                                            $(__DL__productLinks).each(function(){
                                                var href = $(this).attr("href");
                                                if(!__DL__links.includes(href)){
                                                    __DL__links.push(href);
                                                    $(this).attr("dataLayer-wishlist-item",__DL__count++);
                                                    jQuery.getJSON(href, function (response) {
                                                        // get Json response 
                                                        __DL__.wishlist = response;
                                                        var wishlistproducts = {
                                                            'id'   : __DL__.wishlist.product.id,
                                                            'name' : __DL__.wishlist.product.title,
                                                        };
                                                        __DL__prods.push(wishlistproducts);
                                                    });
                                                }
                                            });
                                            
                                            dataLayer.push({'products': __DL__prods, 
                                            'pageType' : 'Wishlist',
                                            'event'    : 'SME Wishlist'});
                                        }
                                        
                                        var __DL__count = 1;
                                        var wishlistDel  = $(__DL__.removeWishlist);
                                        wishlistDel.each(function(){
                                            $(this).attr("dataLayer-wishlist-item-del",__DL__count++);
                                        });
                                        
                                        $(__DL__.removeWishlist).on('click', function(){
                                            console.log('click')
                                            var index = $(this).attr("dataLayer-wishlist-item-del");
                                            var link  = $("[dataLayer-wishlist-item="+index+"]").attr("href");
                                            console.log(index)
                                            console.log(link)
                                            jQuery.getJSON(link, function (response) {
                                                // get Json response 
                                                __DL__.wishlist     = response;
                                                var wishlistproducts = {
                                                    'id'   : __DL__.wishlist.product.id,
                                                    'name' : __DL__.wishlist.product.title,
                                                };
                                                
                                                dataLayer.push({'products': wishlistproducts,
                                                'pageType' : 'Wishlist',
                                                'event'    : 'SME Wishlist Delete Product'});
                                            });
                                        })
                                    }, 3000);
                                    
                                    /** DATALAYER: CTAs */
                                    $(__DL__.ctaSelectors).on('click', function () {
                                        var ctaCheck = setInterval(function () {
                                            // begin check interval
                                            if ($(__DL__.ctaSuccess).length > 0) {
                                                // check visible selectors
                                                clearInterval(ctaCheck);
                                                dataLayer.push({'event': 'SME CTA'});
                                            }
                                        },500);
                                    });
                                    
                                    /** DATALAYER: Promo Subscriptions */
                                    $(__DL__.promoSubscriptionsSelectors).on('click', function () {
                                        var ctaCheck = setInterval(function () {
                                            // begin check interval
                                            if ($(__DL__.promoSuccess).length > 0) {
                                                // check visible selectors
                                                clearInterval(ctaCheck);
                                                dataLayer.push({'event': 'SME Promo Subscription'});
                                            }
                                        },500);
                                    });
                                    
                                }); // document ready
                            }
                        }, 500);
                        </script>